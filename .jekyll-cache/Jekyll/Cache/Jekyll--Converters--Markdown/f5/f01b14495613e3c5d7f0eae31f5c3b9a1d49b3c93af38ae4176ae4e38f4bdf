I"<ul>
  <li>Default Parameter Values</li>
</ul>

<h2 id="vararg-parameters">Vararg Parameters</h2>
<p><code class="language-plaintext highlighter-rouge">vararg</code>is keyword used to define a parameter. This keyword means the parameter is numberically variable.<br />
Thus the parameter can be used as an array, even as an empty array.</p>
<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fun</span> <span class="nf">printTexts</span><span class="p">(</span><span class="k">vararg</span> <span class="n">texts</span><span class="p">:</span> <span class="nc">String</span><span class="p">){</span>
    <span class="n">texts</span><span class="p">.</span><span class="nf">forEacch</span><span class="p">{</span> <span class="n">item</span> <span class="p">-&gt;</span>
        <span class="nf">println</span><span class="p">(</span><span class="s">"$item"</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="k">fun</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="nf">printTexts</span><span class="p">(</span><span class="s">"a"</span><span class="p">,</span> <span class="s">"b"</span><span class="p">,</span> <span class="s">"c"</span><span class="p">)</span>

    <span class="kd">var</span> <span class="py">array</span> <span class="p">=</span> <span class="nf">arrayOf</span><span class="p">(</span><span class="s">"a"</span><span class="p">,</span> <span class="s">"b"</span><span class="p">,</span> <span class="s">"c"</span><span class="p">)</span>
    <span class="c1">//using spread operation</span>
    <span class="nf">printText</span><span class="p">(*</span><span class="n">array</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>
<p>If do not pass any parameter to <code class="language-plaintext highlighter-rouge">printText()</code>, the parameter <code class="language-plaintext highlighter-rouge">texts</code> would be an empty array.
Reference: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax">spread operation</a></p>

<h2 id="named-argument">Named argument</h2>
<p>Calling a function, each argument can be named like ket-value pair.<br />
This can reduce errors in complex codes.</p>
<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fun</span> <span class="nf">sendMessage</span><span class="p">(</span><span class="n">from</span><span class="p">:</span> <span class="nc">String</span><span class="p">,</span> <span class="n">to</span><span class="p">:</span> <span class="nc">String</span><span class="p">,</span> <span class="n">ms</span><span class="p">:</span> <span class="nc">String</span><span class="p">)</span>
    <span class="p">=</span> <span class="nf">println</span><span class="p">(</span><span class="s">"to $to , $ms, from $from"</span><span class="p">)</span>

<span class="k">fun</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="nf">sendMessage</span><span class="p">(</span><span class="n">from</span> <span class="p">=</span> <span class="s">"rst"</span><span class="p">,</span> <span class="n">to</span> <span class="p">=</span> <span class="s">"home"</span><span class="p">,</span> <span class="n">ms</span> <span class="p">=</span> <span class="s">"message"</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="default-parameter-values">Default Parameter Values</h2>
<p>Parameters of a function can have default values at defining the function.<br />
Below code will print ‘Hello’.</p>
<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fun</span> <span class="nf">printText</span><span class="p">(</span><span class="n">text</span><span class="p">:</span> <span class="nc">String</span> <span class="p">=</span> <span class="s">"Hello"</span><span class="p">)</span> <span class="p">=</span> <span class="nf">println</span><span class="p">(</span><span class="s">"$text"</span><span class="p">);</span>
<span class="k">fun</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="nf">printText</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>
:ET