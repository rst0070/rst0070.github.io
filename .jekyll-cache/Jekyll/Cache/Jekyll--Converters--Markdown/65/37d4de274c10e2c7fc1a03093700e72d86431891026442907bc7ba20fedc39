I"~	<h2 id="배경">배경</h2>
<p>javascript는 한 문장씩 순차적으로 실행되는 언어이다.
하지만 애니메이션등의 효과를 사용하게되면 효과를 모두 마치기 
전에 다음 문장이 실행될 수 있다.<br />
다음의 코드를 실행시켜보면 쉽게 이해할 수 있다.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;button id = "click"&gt;click&lt;/button&gt;
&lt;p id = "pp"&gt;저는 알림이 뜨기전에 사라지고 싶어요&lt;/p&gt;
&lt;script&gt;
    $("#click").click(
        function(){
            $("#pp").slideUp("slow");
            alert("어림도 없지!");
        }
    );
&lt;/script&gt;
</code></pre></div></div>
<div style="border-style: solid; border-color: green;">
<button id="click">click</button>
<p id="pp">저는 알림이 뜨기전에 사라지고 싶어요</p>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<script>
    $("#click").click(
        function(){
            console.log(111);
            $("#pp").slideUp("slow");
            alert("어림도 없지!");
        }
    );
</script>

<p>이러한 문제점을 해결하기 위해 Callback기능을 이용한다.</p>

<h2 id="사용방법">사용방법</h2>
<p>다음과 같은 형식으로 사용할 수 있다.
<code class="highlighter-rouge">$(selector).effect(speed, callback)</code>
effect는 slideUp, hide와 같은 효과 함수들을 가리킨다.
callback은 함수이다. 효과가 다 끝나고 함수가 실행된다.<br />
아래의 예시를 실행해보자</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;button id = "click"&gt;click&lt;/button&gt;
&lt;p id = "pp"&gt;저는 알림이 뜨기전에 사라지고 싶어요&lt;/p&gt;
&lt;script&gt;
    $("#click").click(
        function(){
            $("#pp").slideUp("slow",
            function(){
                alert("그렇게 하렴~");
            });
            
        }
    );
&lt;/script&gt;
</code></pre></div></div>

<div style="border-style: solid; border-color: green;">
<button id="clickk">click</button>
<p id="pppp">저는 알림이 뜨기전에 사라지고 싶어요</p>
</div>
<script>
    $("#clickk").click(
        function(){
            console.log(111);
            $("#ppp").slideUp("slow");
            alert("어림도 없지!");
        }
    );
</script>

:ET