I"27<p><a href="https://www.acmicpc.net/problem/20180">문제 링크</a><br />
N개의 건물의 위치가 1부터 N이고 i번째 건물의 높이를 H(i)라 한다.
i &lt; j일때, <code class="language-plaintext highlighter-rouge">(H(i) + H(j)) * (j - i)</code>의 최대값을 구해야한다.<br />
모든 경우의 i, j를 구하면 O(N*N)이므로 시간초과이다. 따라서 i와 j의 범위를 제한할 방법을 생각해야한다.</p>

<p><strong>1. 두 건물의 거리와 높이</strong><br />
N개의 건물중에서 두 건물의 <code class="language-plaintext highlighter-rouge">높이합*거리</code>가 최대인 i번째 건물과 j번째 건물을 찾았다고 할 때(i &lt; j), i~j범위 밖의 건물은 건물i, j보다 작아야한다.<br />
왜냐하면 최적의 i와 j를 찾았는데 그 밖의 범위에 더 크거나 같은 크기의 건물이 있다면 i~j 거리보다 더 큰 거리의 조합인 두 건물을 찾을수 있기 때문이다.</p>

<p>위의 논리에 따라 앞서는 건물(i에 해당하는 건물)은 위치가 증가할 수록 높이가 높아져야하며<br />
뒤에 오는 건물은 위치가 증가할 수록 높이가 작아져야한다. 
이를 만족하지 않는 건물들은 무시한다.</p>

<p><strong>2. i를 기준으로 j를 분할정복</strong><br />
위의 방법으로 i에 해당하는 건물과 j에 해당하는 건물을 추려냈다면
특정 i의 최적인 j를 opt(i)라 할때, opt(i)는 opt(i)이상 위치에 있는 건물은 크기가 안되어서 더이상 최적이 아니라는 의미를 가지게 된다.<br />
따라서 k &lt; i일때 opt(k) &lt;= opt(i) 이며,<br />
k &gt; i일때 opt(k) &gt;= opt(i)이다.<br />
이를 이용해 j의 범위를 줄여갈 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Two_Buildings</span> <span class="o">{</span>
    <span class="cm">/**
     * n개의 건물중 i와 j를 뽑는다.(i &lt; j)
     * 건물의 높이가 h일때
     * (Hi + Hj) * (j - i)의 최대값을 구하라
     * @param args
     * @throws Exception
     */</span>
    <span class="kd">static</span> <span class="kt">int</span> <span class="no">N</span><span class="o">;</span>
    <span class="kd">static</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Building</span><span class="o">&gt;</span> <span class="n">iB</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Building</span><span class="o">&gt;(</span><span class="mi">1000000</span><span class="o">);</span><span class="c1">//x가 작아질 수록 h가 같거나 작게</span>
    <span class="kd">static</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Building</span><span class="o">&gt;</span> <span class="n">jB</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Building</span><span class="o">&gt;(</span><span class="mi">1000000</span><span class="o">);</span><span class="c1">//x가 커질 수록 h가 같거 작게</span>
    <span class="kd">static</span> <span class="kt">long</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Building</span><span class="o">{</span>
        <span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
        <span class="kt">long</span> <span class="n">h</span><span class="o">;</span>
        <span class="nc">Building</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">long</span> <span class="n">h</span><span class="o">){</span><span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">h</span> <span class="o">=</span> <span class="n">h</span><span class="o">;}</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="no">N</span><span class="o">;</span> <span class="n">x</span><span class="o">++){</span>
            <span class="nc">Building</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Building</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">()));</span>

            <span class="cm">/**
             * j번째 빌딩보다 j+a번째 빌딩의 높이가 높다면 j번째 빌딩은 의미가 없다.
             */</span>
            <span class="k">while</span><span class="o">(!</span><span class="n">jB</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">jB</span><span class="o">.</span><span class="na">get</span><span class="o">(</span> <span class="n">jB</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">).</span><span class="na">h</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">.</span><span class="na">h</span><span class="o">)</span> <span class="n">jB</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">jB</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
            <span class="n">jB</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>

            <span class="cm">/**
             * i번째 빌딩보다 i-a번째 빌딩의 높이가 높다면 i번째 빌딩은 필요가 없다.
             */</span>
            <span class="k">if</span><span class="o">(</span><span class="n">iB</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">||</span> <span class="n">iB</span><span class="o">.</span><span class="na">get</span><span class="o">(</span> <span class="n">iB</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">).</span><span class="na">h</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">.</span><span class="na">h</span><span class="o">)</span> <span class="n">iB</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="n">solve</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">iB</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">jB</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">solve</span><span class="o">(</span><span class="kt">int</span> <span class="n">si</span><span class="o">,</span> <span class="kt">int</span> <span class="n">ei</span><span class="o">,</span> <span class="kt">int</span> <span class="n">sj</span><span class="o">,</span> <span class="kt">int</span> <span class="n">ej</span><span class="o">){</span>
        <span class="k">if</span><span class="o">(</span><span class="n">si</span> <span class="o">&gt;</span> <span class="n">ei</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">(</span><span class="n">si</span> <span class="o">+</span> <span class="n">ei</span><span class="o">)</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="o">;</span>
        <span class="kt">long</span> <span class="n">value</span> <span class="o">=</span> <span class="nc">Long</span><span class="o">.</span><span class="na">MIN_VALUE</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">opt</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">sj</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">ej</span><span class="o">;</span> <span class="n">j</span><span class="o">++){</span>
            <span class="kt">long</span> <span class="n">val</span> <span class="o">=</span> <span class="n">cost</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">value</span> <span class="o">&lt;</span> <span class="n">val</span><span class="o">){</span>
                <span class="n">value</span> <span class="o">=</span> <span class="n">val</span><span class="o">;</span>
                <span class="n">opt</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">result</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">value</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>
        <span class="n">solve</span><span class="o">(</span><span class="n">si</span><span class="o">,</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">,</span> <span class="n">sj</span><span class="o">,</span> <span class="n">opt</span><span class="o">);</span>
        <span class="n">solve</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">ei</span><span class="o">,</span> <span class="n">opt</span><span class="o">,</span> <span class="n">ej</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="kt">long</span> <span class="nf">cost</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">){</span>
        <span class="k">return</span> <span class="o">(</span><span class="n">iB</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">h</span> <span class="o">+</span> <span class="n">jB</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">).</span><span class="na">h</span><span class="o">)</span> <span class="o">*</span> <span class="o">(</span><span class="n">jB</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">).</span><span class="na">x</span> <span class="o">-</span> <span class="n">iB</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">x</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>
:ET